Parts of the implementation

For all functions, documentation strings are required listing the author, one sentence description of the purpose of the function and the description of the function (input) arguments and the return values. Each file (if you have many) must also have the author information and one sentence description in the beginning.

Task 1: Implement the k-means clustering algorithm, as described above. Implement the Euclidean distance for computing the similarity between the data and the cluster prototypes, as well as Jaccard distance for 0-1 data. The distance function used is selected in and returned by a dispatch function, which will either return the Euclidean distance function or the Jaccard distance function. The terminating condition for the k-means algorithm is that the cluster assignment of the points to clusters remains the same between the iterations. Grading criteria: correctness, readability of the code, documentation, adherence to specifications (60 points) 

Task 2: Familiarize yourself with the model selection criterion silhouette coefficient and its readily available implementation in Scikit-learn library. You can find the documentation of the function sklearn.metrics.silhouette_score on the library web page at: https://scikit-learn.org/stable/modules/generated/sklearn.metrics.silhouette_score.html# and its user page at: https://scikit-learn.org/stable/modules/clustering.html#silhouette-coefficient The value of the Silhouette coefficient is larger for better clustering solutions and can be used for selecting how many clusters is a good choice for your model. (task not graded)

Task 3: Analyze the data set measurements.dat by trying out different clustering models and selecting the most appropriate number of clusters according to a model selection criterion. Try out different numbers of clusters ranging from 2 to 20 and calculate silhouette coefficients for each solution. Plot the silhouette coefficient values against the number of clusters and make an argument for your choice of the number of clusters. Grading criteria: correctness, readability of your code, documentation, adherence to specifications (20 points)

Task 4: Analyze the data set dna_amp_chr_17.dat by trying out different clustering models and selecting the most appropriate number of clusters according to a model selection criterion. Try out different numbers of clusters ranging from 2 to 20 and use the precomputed distances between the data vectors to provide the distances (see links in Task 2). Plot the silhouette coefficient values against the number of clusters and make an argument for your choice of clusters. Grading criteria: correctness, readability of your code, documentation, adherence to specifications (20 points)
